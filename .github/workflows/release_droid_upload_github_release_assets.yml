name: Release Droid - Upload GitHub Release Assets

on:
  workflow_dispatch:
    inputs:
      upload_url:
        description: 'Upload URL'
        required: true


jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.12.0
        with:
          python-version: '3.10'
          poetry-version: '1.8.2'

      - name: Check Release
        run: poetry run python3 -u scripts/build/check_release.py

  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Get ODBC driver
        id: get-odbc-driver
        run: |
          FILE=$(bash .github/workflows/scripts/download_odbc_driver.sh "$(pwd)/..")
          echo so-file=\'$FILE\' >> "$GITHUB_OUTPUT"
      - name: Get EXAPLUS
        run: bash .github/workflows/scripts/download_exaplus.sh "$(pwd)/.."
      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.12.0
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: '1.8.2'
      - name: Spawn EXASOL environemnt
        run: |
          poetry run python3 -m exasol_integration_test_docker_environment.main spawn-test-environment --environment-name test --database-port-forward 8888 --bucketfs-port-forward 6666
          sleep 120 # wait for SLC to be unpacked
      - name: Run all tests
        # run: poetry run scripts/test/run_locally.sh --server "localhost:8888" --odbc-driver="../downloads/ODBC/lib/linux/x86_64/libexaodbc-uo2214lv2.so"
        run: poetry run scripts/test/run_locally.sh --server "localhost:8888" \
             --odbc-driver="${{ steps.get-odbc-driver.outputs.so-file }}"
        env:
          EXAPLUS: ../downloads/EXAPLUS
          TEST_DOCKER_NETWORK_NAME: db_network_test
          TEST_ENVIRONMENT_NAME: test

  upload:
    runs-on: ubuntu-latest
    needs: [integration-tests, check-release]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.12.0
        with:
          python-version: '3.10'
          poetry-version: '1.8.2'
      - name: Build Release
        run: poetry build
      - name: Upload assets to the GitHub release draft
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.inputs.upload_url }}
          asset_path: dist/*

